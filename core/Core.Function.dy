module Core.Function

id a = a and

($) f a = f a and
(.) f g a = f (g a) and
(;) f g a = g (f a) and

flip f a b = f b a and
curry f a b = f (a, b) and
uncurry f (a, b) = f a b and

fix f = let a = f a in a and
iterate f a = a :: iterate f (f a) and

join f a = f a a

module Demo

import Dynasty.Prelude
import Dynasty.DOM
import Dynasty.Function
import Dynasty.List
import Dynasty.String

setupBtn id text =
  do   r <- byId "result"
  then el <- byId id
  then onClick el \_ -> updateValue r \v -> v + text
and

setupDigitBtn digit = setupBtn ("b" + show digit) (show digit) and
setupSymbolBtn name symbol = setupBtn ("b" + name) symbol and

setupDelBtn =
  do   r <- byId "result"
  then el <- byId ("bdel")
  then onClick el \_ -> updateValue r pop
and

setMsg text =
  do   msg <- byId "msg"
  then setInner msg text
and

compute =
  do   r <- byId "result"
  then v <- value r
  then
    case attempt (evalJS v) of
    | Nothing -> setMsg "Error"
    | Just n -> setValue r n *> setMsg ""
and

setupComputeBtn =
  do   el <- byId ("beq")
  then onClick el \_ -> compute
and

main =
  do   traverse setupDigitBtn (0 .. 9)
  then traverse (uncurry setupSymbolBtn)
        [("add", "+"), ("sub", "-"), ("mul", "*"), ("div", "/"), ("dot", ".")]
  then setupDelBtn
  then setupComputeBtn

cabal-version: 3.6

name: dynasty
version: 0.0.0.0
synopsis: Dynamically-typed purely functional programming language
description: Please see the README on GitHub at <https://github.com/aionescu/dynasty#readme>
homepage: https://github.com/aionescu/dynasty#readme
bug-reports: https://github.com/aionescu/dynasty/issues
license: GPL-3.0-only
license-file: LICENSE.txt
maintainer: alxi.2001@gmail.com
copyright: Copyright (C) 2020-2021 Alex Ionescu
category: Interpreter
build-type: Simple
extra-source-files: README.md

executable dynasty
  main-is: Main.hs

  other-modules:
    Utils
    Language.Dynasty.Frontend.Syntax
    Language.Dynasty.Frontend.Parser
    Language.Dynasty.Runtime.Val
    Language.Dynasty.Runtime.FFI
    Language.Dynasty.Runtime.Prelude
    Language.Dynasty.Runtime.Eval
    Opts

  hs-source-dirs: src

  build-depends:
    base >=4.14 && <5
    , containers ^>= 0.6.2
    , mtl ^>= 2.2.2
    , optparse-applicative ^>= 0.16.1
    , parsec ^>= 3.1.14
    , text ^>= 1.2.4
    , vector ^>= 0.12.3

  ghc-options:
    -threaded
    -rtsopts
    -with-rtsopts=-N
    -Wall
    -Wincomplete-uni-patterns
    -Wprepositive-qualified-module
    -Wmissing-deriving-strategies
    -Wunused-packages
    -Wno-star-is-type

  default-extensions:
    ApplicativeDo
    BangPatterns
    BlockArguments
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveAnyClass
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveLift
    DeriveTraversable
    DerivingStrategies
    EmptyCase
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    GeneralizedNewtypeDeriving
    ImportQualifiedPost
    InstanceSigs
    KindSignatures
    LambdaCase
    MultiParamTypeClasses
    MultiWayIf
    NamedFieldPuns
    OverloadedLists
    OverloadedStrings
    PatternSynonyms
    RankNTypes
    RecordWildCards
    RecursiveDo
    ScopedTypeVariables
    StandaloneDeriving
    TupleSections
    TypeApplications
    TypeFamilies
    TypeFamilyDependencies
    TypeOperators
    ViewPatterns

  default-language: Haskell2010

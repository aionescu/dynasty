module Calc

import Core.Function
import Core.IO
import Core.IO.DOM
import Core.IO.Unsafe
import Core.List
import Core.Math
import Core.String

setupBtn id text =
  do   r <- byId "result"
  then el <- byId $ "b" + id
  then onClick el $ updateValue r \v -> v + text
and

setupDigitBtn = show; join setupBtn and

setupDelBtn =
  do   r <- byId "result"
  then el <- byId "bdel"
  then onClick el $ updateValue r pop
and

setMsg text =
  do   msg <- byId "msg"
  then setInner msg text
and

compute =
  do   r <- byId "result"
  then v <- value r
  then tryIO (unsafeEvalJS v) >>= \case
    | Left e -> setMsg e
    | Right n -> setValue r n *> setMsg ""
and

setupComputeBtn =
  do   el <- byId "beq"
  then onClick el compute
and

symbols =
  [ ("add", "+")
  , ("sub", "-")
  , ("mul", "*")
  , ("div", "/")
  , ("dot", ".")
  ]
and

main =
  do   setupDigitBtn `forEach` 0 .. 9
  then uncurry setupBtn `forEach` symbols
  then setupDelBtn
  then setupComputeBtn

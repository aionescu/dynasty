module Calc

import Core.DOM
import Core.Function
import Core.IO
import Core.IO.Unsafe
import Core.List
import Core.Math
import Core.String

setupBtn id text =
  do   r <- byId "result"
  then el <- byId id
  then onClick el $ updateValue r \v -> v + text
and

setupDigitBtn digit = setupBtn ("b" + show digit) $ show digit and
setupSymbolBtn name symbol = setupBtn ("b" + name) symbol and

setupDelBtn =
  do   r <- byId "result"
  then el <- byId "bdel"
  then onClick el $ updateValue r pop
and

setMsg text =
  do   msg <- byId "msg"
  then setInner msg text
and

compute =
  do   r <- byId "result"
  then v <- value r
  then tryIO (unsafeEvalJS v) >>= \case
    | Left e -> setMsg e
    | Right n -> do setValue r n then setMsg ""
and

setupComputeBtn =
  do   el <- byId ("beq")
  then onClick el compute
and

symbols =
  [ ("add", "+")
  , ("sub", "-")
  , ("mul", "*")
  , ("div", "/")
  , ("dot", ".")
  ]
and

main =
  do   setupDigitBtn `forEach` 0 .. 9
  then uncurry setupSymbolBtn `forEach` symbols
  then setupDelBtn
  then setupComputeBtn
